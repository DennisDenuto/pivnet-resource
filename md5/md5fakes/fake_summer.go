// This file was generated by counterfeiter
package md5fakes

import (
	"crypto/md5"
	"sync"

	"github.com/pivotal-cf-experimental/pivnet-resource/md5"
)

type FakeSummer struct {
	SumStub        func() (string, error)
	sumMutex       sync.RWMutex
	sumArgsForCall []struct{}
	sumReturns     struct {
		result1 string
		result2 error
	}
}

func (fake *FakeSummer) Sum() (string, error) {
	fake.sumMutex.Lock()
	fake.sumArgsForCall = append(fake.sumArgsForCall, struct{}{})
	fake.sumMutex.Unlock()
	if fake.SumStub != nil {
		return fake.SumStub()
	} else {
		return fake.sumReturns.result1, fake.sumReturns.result2
	}
}

func (fake *FakeSummer) SumCallCount() int {
	fake.sumMutex.RLock()
	defer fake.sumMutex.RUnlock()
	return len(fake.sumArgsForCall)
}

func (fake *FakeSummer) SumReturns(result1 string, result2 error) {
	fake.SumStub = nil
	fake.sumReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ md5.Summer = new(FakeSummer)
