---
resources:
- name: pivnet-resource-develop
  type: git
  source:
    branch: develop
    private_key: {{pivnet-resource-git-deploy-private-key}}
    uri: git@github.com:pivotal-cf-experimental/pivnet-resource.git

- name: pivnet-resource-master
  type: git
  source:
    branch: master
    private_key: {{pivnet-resource-git-deploy-private-key}}
    uri: git@github.com:pivotal-cf-experimental/pivnet-resource.git

- name: pivnet-resource-image
  type: docker-image
  source:
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}
    repository: pivotalcf/pivnet-resource

- name: pivnet-resource-rootfs
  type: s3
  source:
    bucket: pivnet-resource-artifacts
    regexp: pivnet-resource-rootfs-(.*)
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: version
  type: semver
  source:
    bucket: pivnet-resource-artifacts
    key: current-version
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    initial_version: 0.0.1

- name: tracker
  type: tracker
  source:
    token: {{tracker-token}}
    project_id: {{tracker-project-id}}
    tracker_url: https://www.pivotaltracker.com

- name: pivnet-resource-github-release
  type: github-release
  source:
    access_token: {{pivnet-resource-github-release-access-token}}
    repository: pivnet-resource
    user: pivotal-cf-experimental

- name: s3-resource
  type: git
  source:
    branch: master
    uri: https://github.com/concourse/s3-resource

- name: s3-out-binary
  type: s3
  source:
    bucket: pivnet-resource-artifacts
    versioned_file: s3-out
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

jobs:
- name: s3-resource-build-and-test
  public: true
  plan:
  - aggregate:
    - get: s3-resource
      trigger: true
    - get: pivnet-resource
      resource: pivnet-resource-develop
  - task: test
    file: pivnet-resource/ci/test-s3-resource/task.yml
    config:
      params:
        S3_TESTING_ACCESS_KEY_ID: {{s3-resource-testing-access-key-id}}
        S3_TESTING_SECRET_ACCESS_KEY: {{s3-resource-testing-secret-access-key}}
        S3_VERSIONED_TESTING_BUCKET: {{s3-resource-testing-versioned-bucket}}
        S3_TESTING_BUCKET: {{s3-resource-testing-bucket}}
        S3_TESTING_REGION: {{s3-resource-testing-region}}
  - task: build-s3-binaries
    file: pivnet-resource/ci/build-s3-binaries/task.yml
  - put: s3-out-binary
    params:
      file: s3-binaries/out
      to: s3-out

- name: test
  public: true
  plan:
  - aggregate:
    - get: pivnet-resource
      resource: pivnet-resource-develop
      trigger: true
    - get: s3-out-binary
      resource: s3-out-binary
      passed: [s3-resource-build-and-test]
      trigger: true
  - task: test
    file: pivnet-resource/ci/test/task.yml
    config:
      params:
        API_TOKEN: {{api-token}}

- name: rc
  serial_groups: [version]
  public: true
  plan:
  - aggregate:
    - get: pivnet-resource
      resource: pivnet-resource-develop
      passed: [test]
      trigger: true
    - get: s3-out-binary
      resource: s3-out-binary
      passed: [test]
      trigger: true
    - get: version
      params: {pre: rc}
  - task: build
    file: pivnet-resource/ci/build/task.yml
  - put: pivnet-resource-image
    params:
      build: build/gopath/src/github.com/pivotal-cf-experimental/pivnet-resource
      tag: version/number
      tag_prefix: v
    get_params: {rootfs: true}
  - task: version-rootfs
    file: pivnet-resource/ci/version-rootfs/task.yml
  - aggregate:
    - put: pivnet-resource-rootfs
      params: {from: pivnet-resource-image/rootfs-(.*).tar}
    - put: version
      params: {file: version/number}
    - put: tracker
      params:
        repos: [pivnet-resource]

- name: shipit
  serial_groups: [version]
  public: true
  plan:
  - aggregate:
    - get: pivnet-resource
      resource: pivnet-resource-develop
      passed: [rc]
    - get: version
      passed: [rc]
      params: {bump: final}
  - task: build
    file: pivnet-resource/ci/build/task.yml
  - put: pivnet-resource-image
    params:
      build: build/gopath/src/github.com/pivotal-cf-experimental/pivnet-resource
      tag: version/number
      tag_prefix: v
    get_params: {rootfs: true}
  - task: version-rootfs
    file: pivnet-resource/ci/version-rootfs/task.yml
  - aggregate:
    - put: pivnet-resource-rootfs
      params: {from: pivnet-resource-image/rootfs-(.*).tar}
    - put: pivnet-resource-master
      params:
        repository: pivnet-resource
        tag: version/number
        tag_prefix: v
    - put: version
      params: {file: version/number}

- name: github-release
  public: true
  plan:
  - aggregate:
    - get: pivnet-resource
      resource: pivnet-resource-master
      passed: [shipit]
      trigger: true
    - get: pivnet-resource-rootfs
      passed: [shipit]
      trigger: true
  - task: most-recent-tag
    file: pivnet-resource/ci/most-recent-tag/task.yml
  - put: pivnet-resource-github-release
    params:
      name: most-recent-tag/tagname
      tag: most-recent-tag/tagname
      globs:
      - pivnet-resource-rootfs/rootfs-*

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/number}
