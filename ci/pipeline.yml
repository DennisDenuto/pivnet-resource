---
resources:
- name: pivnet-resource-develop
  type: git
  source:
    branch: develop
    private_key: {{pivnet-resource-git-deploy-private-key}}
    uri: git@github.com:pivotal-cf-experimental/pivnet-resource.git

- name: pivnet-resource-master
  type: git
  source:
    branch: master
    private_key: {{pivnet-resource-git-deploy-private-key}}
    uri: git@github.com:pivotal-cf-experimental/pivnet-resource.git

- name: pivnet-resource-image
  type: docker-image
  source:
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}
    repository: pivotalcf/pivnet-resource

- name: pivnet-resource-rootfs
  type: s3
  source:
    bucket: pivnet-resource-artifacts
    versioned_file: pivnet-resource-rootfs
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: version
  type: semver
  source:
    bucket: pivnet-resource-artifacts
    key: current-version
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    initial_version: 0.0.1

jobs:
- name: test
  public: true
  plan:
  - get: pivnet-resource
    resource: pivnet-resource-develop
    trigger: true
  - task: test
    file: pivnet-resource/ci/test/task.yml
    config:
      params:
        API_TOKEN: {{api-token}}

- name: rc
  serial_groups: [version]
  public: true
  plan:
  - do:
    - aggregate:
      - get: pivnet-resource-develop
        passed: [test]
        trigger: true
      - get: version
        params: {pre: rc}
    - put: version
      params: {file: version/number}

- name: shipit
  public: true
  plan:
  - aggregate:
    - get: pivnet-resource-develop
      passed: [rc]
    - get: version
      passed: [rc]
      params: {bump: final}
  - aggregate:
    - put: pivnet-resource-master
      params:
        repository: pivnet-resource-develop
    - put: version
      params: {file: version/number}

- name: pivnet-resource-docker-image
  serial: true
  plan:
  - get: pivnet-resource
    resource: pivnet-resource-master
    passed: [shipit]
    trigger: true
  - task: build
    file: pivnet-resource/ci/build/task.yml
  - put: pivnet-resource-image
    params: {build: build/gopath/src/github.com/pivotal-cf-experimental/pivnet-resource}
    get_params: {rootfs: true}
  - put: pivnet-resource-rootfs
    params: {from: pivnet-resource-image/rootfs.tar}

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/number}
