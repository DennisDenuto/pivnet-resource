#!/bin/sh

set -eu

get_resource_version_pivnet() {
  # Unauthenticated for now
  curl \
    -s \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -X GET \
    "https://network.pivotal.io/api/v2/products/${1}/releases" | \
      jq -r '.releases[0].version'
}

get_resource_version() {
  jq -n "{
      source: {
         api_token: \"${1}\",
         resource_name: \"${2}\"
      },
      version: {}
    }" | "${resource_dir}/check" | jq -r '.[0].version'
}

main() {
  set -x

  resource_dir="/opt/resource"

  product="p-gitlab"
  expected_version=$(get_resource_version_pivnet "${resource_name}")
  version=$(get_resource_version token "${resource_name}")
  test "${version}" = "${expected_version}"

  product="p-mysql"
  expected_version=$(get_resource_version_pivnet "${resource_name}")
  version=$(get_resource_version token "${resource_name}")
  test "${version}" = "${expected_version}"
}

if [ "$(basename "${0}")" = "all" ]; then
  temp_file=$(mktemp)

  set +e
  main > "${temp_file}" 2>&1
  result=$?
  set +x
  set -e
  
  if [ "${result}" -eq 0 ]; then 
    printf '\e[32m%s\e[0m\n' "all tests passed!"
  else 
    cat "${temp_file}"
    printf '\e[31m%s\e[0m\n' "test failure!"
    exit 1
  fi
fi
